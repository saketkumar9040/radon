///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////       REQUIRED    MODULES   AND   PACKAGES      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const jwt = require("jsonwebtoken");
const authorModel = require("../models/authorModel");
var validator = require("email-validator");
 
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////    CREATE   AUTHOR    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


const createAuthor = async function (req, res) {
try{
  let data = req.body;
  if(Object.keys(data).length==0){return res.status(400).send({status:false,msg:"no Data Entered"});}
  if(!data.fname){return res.status(400).send({status:false,msg:"fname Must Be Present"});}
  if(!data.lname){return res.status(400).send({status:false,msg:"lname Must Be Present"});}
  if(!data.title){return res.status(400).send({status:false,msg:"title Must Be Present"});}
  if(!data.email) { return res.status(400).send({status:false,msg:"email Must Be Present"});}
  if(!validator.validate(data.email)){return res.status(400).send({status:false,msg:"please Enter Valid Email Id"})}
  if(!data.password){ return res.status(400).send({status:false,msg:"password Must Be Present"});}

  let authorData = await authorModel.create(data);
  res.status(201).send({ msg: authorData });
}catch(err){
  res.status(500).send({status:false,msg:err.message})
}
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////       AUTHOR    LOGIN        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


const authorLogin=async (req,res)=>{
   try{
     let data=req.body
     let authorEmail=data.email;
     let password=data.password;
     if (Object.keys(data).length==0){return res.status(400).send({status:false,msg:"no Data Entered"})}
     if(!authorEmail){return res.status(400).send({status:false,msg:"please Enter Email"})}
     if(!password){return res.status(400).send({status:false,msg:"please Enter Password"})}

     let author=await authorModel.findOne({email:authorEmail,password:password});
     if(!author){return res.status(400).send({status:false,msg:"no Such Author Present"})}

     let token=jwt.sign(
      {
        authorId:author._id.toString()
      },
       "group-16"
     );
     res.status(201).send({status:true,msg:token})
   }catch(err){
    res.status(500).send({status:false,msg:err.message})
   } 
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////        EXPORTED   MODULES     ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

module.exports.createAuthor = createAuthor;
module.exports.authorLogin = authorLogin;